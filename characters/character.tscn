[gd_scene load_steps=22 format=2]

[ext_resource path="res://characters/character.gd" type="Script" id=1]
[ext_resource path="res://characters/state/state.gd" type="Script" id=2]
[ext_resource path="res://characters/state/inventory_state.gd" type="Script" id=3]
[ext_resource path="res://characters/state/dialogue_state.gd" type="Script" id=4]
[ext_resource path="res://characters/state/move_state.gd" type="Script" id=5]
[ext_resource path="res://characters/state/stats_state.gd" type="Script" id=6]
[ext_resource path="res://characters/state/experience_state.gd" type="Script" id=7]
[ext_resource path="res://characters/state/skills_state.gd" type="Script" id=8]
[ext_resource path="res://characters/state/ai_state.gd" type="Script" id=9]
[ext_resource path="res://characters/state/look_state.gd" type="Script" id=10]
[ext_resource path="res://characters/state/input_state.gd" type="Script" id=11]
[ext_resource path="res://characters/state/interaction_state.gd" type="Script" id=12]

[sub_resource type="CapsuleShape" id=1]
radius = 0.4

[sub_resource type="BoxShape" id=2]
extents = Vector3( 0.25, 0.5, 0.5 )

[sub_resource type="CubeMesh" id=3]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform float percentage = 0.5;
uniform float angle = 0.0;

void vertex()
{
	//float angle = cosh(dot(dir.xz, BINORMAL.xz) / length(BINORMAL.xz) * length(dir.xz));
	float old_x = VERTEX.x;
	VERTEX.x = 1.0-2.0*percentage;
	if(VERTEX.x < old_x)
		VERTEX.x = old_x;
	VERTEX = (inverse(WORLD_MATRIX) * mat4(vec4(cos(angle), 0.0, sin(angle), 0.0),
			vec4(0.0, 1.0, 0.0, 0.0),
			vec4(-sin(angle), 0.0, cos(angle), 0.0),
			vec4(0.0, 0.0, 0.0, 1.0)) * WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;
	//COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}

void fragment()
{
	ALBEDO = vec3(1.0, 0.0, 0.0);
	if(percentage <= 0.0)
		ALPHA = 0.0;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/percentage = 0.0
shader_param/angle = 0.0

[sub_resource type="Gradient" id=6]
colors = PoolColorArray( 0, 0, 0, 1, 1, 0, 0, 1 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="SpatialMaterial" id=8]
params_billboard_mode = 1
params_billboard_keep_scale = true
albedo_texture = SubResource( 7 )

[sub_resource type="ProxyTexture" id=9]

[node name="character" type="KinematicBody" groups=[
"characters",
]]
collision_layer = 9
collision_mask = 15
script = ExtResource( 1 )

[node name="collision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0.9, 0 )
shape = SubResource( 1 )

[node name="interact_zone" type="Area" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.9, 0 )

[node name="collision" type="CollisionShape" parent="interact_zone"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.6 )
shape = SubResource( 2 )

[node name="state" type="Node" parent="."]
script = ExtResource( 2 )

[node name="move" type="Node" parent="state"]
script = ExtResource( 5 )

[node name="experience" type="Node" parent="state"]
script = ExtResource( 7 )

[node name="inventory" type="Node" parent="state"]
script = ExtResource( 3 )

[node name="skills" type="Node" parent="state"]
script = ExtResource( 8 )

[node name="stats" type="Node" parent="state"]
script = ExtResource( 6 )

[node name="dialogue" type="Node" parent="state"]
script = ExtResource( 4 )

[node name="interaction" type="Node" parent="state"]
script = ExtResource( 12 )

[node name="look" type="Node" parent="state"]
script = ExtResource( 10 )

[node name="input" type="Node" parent="state"]
script = ExtResource( 11 )

[node name="ai" type="Node" parent="state"]
script = ExtResource( 9 )

[node name="health_bar" type="CSGMesh" parent="."]
transform = Transform( 1.25, 0, 0, 0, 0.25, 0, 0, 0, 0.1, 0, 2.18982, 0 )
mesh = SubResource( 3 )
material = SubResource( 5 )

[node name="health_bar2" type="Sprite3D" parent="."]
transform = Transform( 2, 0, 0, 0, 0.5, 0, 0, 0, 1, 0, 2.91832, 0 )
visible = false
material_override = SubResource( 8 )
pixel_size = 1.0
texture = SubResource( 9 )
region_enabled = true
region_rect = Rect2( 0, 0, 1, 1 )

[connection signal="body_entered" from="interact_zone" to="state/interaction" method="_on_interact_zone_body_entered"]
[connection signal="body_exited" from="interact_zone" to="state/interaction" method="_on_interact_zone_body_exited"]
